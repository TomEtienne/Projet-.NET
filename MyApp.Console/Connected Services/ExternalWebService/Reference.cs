//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyApp.Console.ExternalWebService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/MyApp.Entities")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] UserPhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyApp.Console.ExternalWebService.User[] listUsersfollowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyApp.Console.ExternalWebService.User[] listUsersfollowByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string verifyPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] UserPhoto {
            get {
                return this.UserPhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPhotoField, value) != true)) {
                    this.UserPhotoField = value;
                    this.RaisePropertyChanged("UserPhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyApp.Console.ExternalWebService.User[] listUsersfollow {
            get {
                return this.listUsersfollowField;
            }
            set {
                if ((object.ReferenceEquals(this.listUsersfollowField, value) != true)) {
                    this.listUsersfollowField = value;
                    this.RaisePropertyChanged("listUsersfollow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyApp.Console.ExternalWebService.User[] listUsersfollowBy {
            get {
                return this.listUsersfollowByField;
            }
            set {
                if ((object.ReferenceEquals(this.listUsersfollowByField, value) != true)) {
                    this.listUsersfollowByField = value;
                    this.RaisePropertyChanged("listUsersfollowBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nickName {
            get {
                return this.nickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.nickNameField, value) != true)) {
                    this.nickNameField = value;
                    this.RaisePropertyChanged("nickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string verifyPassword {
            get {
                return this.verifyPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.verifyPasswordField, value) != true)) {
                    this.verifyPasswordField = value;
                    this.RaisePropertyChanged("verifyPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExternalWebService.IWSLogin")]
    public interface IWSLogin {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSLogin/DoWork", ReplyAction="http://tempuri.org/IWSLogin/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSLogin/DoWork", ReplyAction="http://tempuri.org/IWSLogin/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSLogin/Validate", ReplyAction="http://tempuri.org/IWSLogin/ValidateResponse")]
        MyApp.Console.ExternalWebService.User Validate(string nickName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWSLogin/Validate", ReplyAction="http://tempuri.org/IWSLogin/ValidateResponse")]
        System.Threading.Tasks.Task<MyApp.Console.ExternalWebService.User> ValidateAsync(string nickName, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWSLoginChannel : MyApp.Console.ExternalWebService.IWSLogin, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSLoginClient : System.ServiceModel.ClientBase<MyApp.Console.ExternalWebService.IWSLogin>, MyApp.Console.ExternalWebService.IWSLogin {
        
        public WSLoginClient() {
        }
        
        public WSLoginClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSLoginClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSLoginClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSLoginClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public MyApp.Console.ExternalWebService.User Validate(string nickName, string password) {
            return base.Channel.Validate(nickName, password);
        }
        
        public System.Threading.Tasks.Task<MyApp.Console.ExternalWebService.User> ValidateAsync(string nickName, string password) {
            return base.Channel.ValidateAsync(nickName, password);
        }
    }
}
